# Generated by Django 3.2 on 2022-05-13 09:23

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExperimentInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experiment_name', models.CharField(db_column='experiment_name', max_length=64)),
                ('place', models.CharField(db_column='place', max_length=255, null=True)),
                ('unit', models.CharField(db_column='unit', max_length=255, null=True)),
                ('experimenters', models.CharField(db_column='experimenters', max_length=255, null=True)),
                ('device_name', models.CharField(db_column='device_name', max_length=255, null=True)),
                ('device_model', models.CharField(db_column='device_model', max_length=64, null=True)),
                ('device_parameters', models.TextField(db_column='device_parameters')),
                ('standard_number', models.CharField(db_column='standard_number', max_length=255, null=True)),
                ('files', models.TextField(db_column='files')),
                ('experimental_parameters', models.TextField(db_column='experimental_parameters')),
                ('start_time', models.DateTimeField(blank=True, db_column='start_time', null=True)),
                ('end_time', models.DateTimeField(blank=True, db_column='end_time', null=True)),
                ('material_id', models.IntegerField(verbose_name='material_id')),
                ('create_date', models.DateTimeField(db_column='create_date', default=django.utils.timezone.now)),
                ('creator', models.CharField(db_column='creator', max_length=64)),
            ],
            options={
                'db_table': 'experiment_information',
            },
        ),
        migrations.CreateModel(
            name='MaterialCredentials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_name', models.CharField(db_column='material_name', max_length=64)),
                ('material_type', models.CharField(db_column='material_type', max_length=64, null=True)),
                ('trademark', models.CharField(db_column='trademark', max_length=64, null=True)),
                ('prepare_batches', models.CharField(db_column='prepare_batches', max_length=64, null=True)),
                ('additional_notes', models.TextField(db_column='additional_notes')),
                ('preparation_process', models.TextField(db_column='preparation_process')),
                ('sample_status', models.TextField(db_column='sample_status')),
                ('component_table', models.TextField(db_column='component_table')),
                ('create_date', models.DateTimeField(db_column='create_date', default=django.utils.timezone.now)),
                ('creator', models.CharField(db_column='creator', max_length=64)),
            ],
            options={
                'db_table': 'material_credentials',
            },
        ),
        migrations.CreateModel(
            name='Sysmenu',
            fields=[
                ('menuid', models.AutoField(db_column='MenuId', primary_key=True, serialize=False)),
                ('menuname', models.CharField(db_column='MenuName', max_length=64)),
                ('menuurl', models.CharField(db_column='MenuUrl', max_length=64)),
                ('menustatus', models.IntegerField(db_column='MenuStatus')),
                ('menuparentid', models.IntegerField(db_column='MenuParentId')),
                ('createdate', models.DateTimeField(db_column='CreateDate', default=django.utils.timezone.now)),
                ('creator', models.CharField(db_column='Creator', max_length=32)),
                ('orderfield', models.CharField(db_column='OrderField', max_length=32)),
                ('isadmin', models.IntegerField(db_column='IsAdmin')),
                ('icon', models.CharField(db_column='Icon', max_length=64)),
            ],
            options={
                'db_table': 'sysmenu',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Syssetting',
            fields=[
                ('setid', models.AutoField(db_column='SetId', primary_key=True, serialize=False)),
                ('setvalue', models.CharField(db_column='SetValue', max_length=32)),
                ('setname', models.CharField(db_column='SetName', max_length=32)),
                ('settype', models.CharField(db_column='SetType', max_length=32)),
                ('createdate', models.DateTimeField(verbose_name='createdate')),
                ('isedit', models.IntegerField(db_column='IsEdit', default=1)),
                ('creator', models.CharField(db_column='Creator', max_length=64)),
                ('usestate', models.SmallIntegerField(db_column='UseState', default=1)),
                ('color', models.CharField(db_column='Color', max_length=32)),
            ],
            options={
                'db_table': 'syssetting',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Userinfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('creator', models.CharField(db_column='Creator', max_length=32)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'userinfo',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Sysuserinfo',
            fields=[
                ('uid', models.AutoField(db_column='UId', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='UserName', max_length=32, null=True)),
                ('usersex', models.CharField(db_column='UserSex', max_length=2, null=True)),
                ('depname', models.CharField(db_column='DepName', max_length=32, null=True)),
                ('phone', models.CharField(db_column='Phone', max_length=32, null=True)),
                ('note', models.CharField(db_column='Note', max_length=1024, null=True)),
                ('accountid', models.ForeignKey(db_column='accountid', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'sysuserinfo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MaterialPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('performance_name', models.CharField(db_column='performance_name', max_length=64, null=True)),
                ('performance_value', models.CharField(db_column='performance_value', max_length=255, null=True)),
                ('files', models.CharField(db_column='files', max_length=255, null=True)),
                ('create_date', models.DateTimeField(db_column='create_date', default=django.utils.timezone.now)),
                ('creator', models.CharField(db_column='creator', max_length=64)),
                ('experimental_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance', to='SysModel.experimentinformation')),
            ],
            options={
                'db_table': 'material_performance',
            },
        ),
        migrations.CreateModel(
            name='MaterialClassiication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classificationname', models.CharField(db_column='ClassificationName', max_length=32, unique=True)),
                ('createdate', models.DateTimeField(default=django.utils.timezone.now)),
                ('createTor', models.CharField(max_length=32)),
                ('path', models.CharField(max_length=240)),
                ('pid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classid', to='SysModel.materialclassiication')),
            ],
            options={
                'db_table': 'MaterialClassiication',
            },
        ),
        migrations.CreateModel(
            name='MaterialCharacterization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characterization_name', models.CharField(db_column='characterization_name', max_length=64, null=True)),
                ('characterization_value', models.TextField()),
                ('create_date', models.DateTimeField(db_column='create_date', default=django.utils.timezone.now)),
                ('creator', models.CharField(db_column='creator', max_length=64)),
                ('experimental_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='characterization', to='SysModel.experimentinformation')),
            ],
            options={
                'db_table': 'material_characterization',
            },
        ),
    ]
